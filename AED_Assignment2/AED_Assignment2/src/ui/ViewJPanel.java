/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.CarFleet;
import model.Car;
/**
 *
 * @author karpe.s@northeastern.edu
 */
public class ViewJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ViewJPanel
     */
    CarFleet carFleetDetails;
    public ViewJPanel(CarFleet carFleetDetails) {
        initComponents();
        
        this.carFleetDetails = carFleetDetails;
        
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblViewCarDetails = new javax.swing.JTable();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        btnViewCarDetails = new javax.swing.JButton();
        lblLastUpdatedValue = new javax.swing.JLabel();
        txtLastUpdatedValue = new javax.swing.JTextField();
        btnExpiredMaintCert = new javax.swing.JButton();
        btnFirstAvailableCar = new javax.swing.JButton();
        btnDeleteCarDetails = new javax.swing.JButton();
        btnAllAvailableCars = new javax.swing.JButton();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        appBox = new javax.swing.JComboBox<>();
        lblManufacturerFilter = new javax.swing.JLabel();
        lblUsedByApp = new javax.swing.JLabel();
        madeByBox = new javax.swing.JComboBox<>();
        jLayeredPane6 = new javax.swing.JLayeredPane();
        lblCountAvlCars = new javax.swing.JLabel();
        lblCountUnAvlCars = new javax.swing.JLabel();
        txtCountAvlCars = new javax.swing.JTextField();
        txtCountUnAvlCars = new javax.swing.JTextField();
        availStatusButton = new javax.swing.JButton();
        jLayeredPane7 = new javax.swing.JLayeredPane();
        btnManufacturedDateFilter = new javax.swing.JButton();
        lblManufacturedYearFilter = new javax.swing.JLabel();
        txtManufacturedDateFilter = new javax.swing.JTextField();
        jLayeredPane8 = new javax.swing.JLayeredPane();
        lblManufacturedYearFilter1 = new javax.swing.JLabel();
        lblMinSeat = new javax.swing.JLabel();
        comboBoxMaximumCapacity = new javax.swing.JComboBox<>();
        lblMaxSeat = new javax.swing.JLabel();
        comboBoxMinCapacity = new javax.swing.JComboBox<>();
        jLayeredPane9 = new javax.swing.JLayeredPane();
        btnModelNumberFilter = new javax.swing.JButton();
        txtModelNumberFilter = new javax.swing.JTextField();
        lblModelNumberFilter = new javax.swing.JLabel();
        jLayeredPane10 = new javax.swing.JLayeredPane();
        btnCityFilter = new javax.swing.JButton();
        lblCityFilter = new javax.swing.JLabel();
        txtCityFilter = new javax.swing.JTextField();
        jLayeredPane11 = new javax.swing.JLayeredPane();
        txtSerialNumberFilter = new javax.swing.JTextField();
        btnSerialNumberFilter = new javax.swing.JButton();
        lblSerialNumberFilter = new javax.swing.JLabel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLayeredPane5 = new javax.swing.JLayeredPane();
        lblUsedBy = new javax.swing.JLabel();
        lblMaintenanceCertExpDate = new javax.swing.JLabel();
        lblManufacturedDate = new javax.swing.JLabel();
        lblSeatCapacity = new javax.swing.JLabel();
        lblCarSerialNum = new javax.swing.JLabel();
        lblCity = new javax.swing.JLabel();
        lblCarManufacturer = new javax.swing.JLabel();
        txtSeatCapacity = new javax.swing.JTextField();
        lblCarModelNum = new javax.swing.JLabel();
        txtSerialNum = new javax.swing.JTextField();
        txtLastUpdated = new javax.swing.JTextField();
        txtModelNum = new javax.swing.JTextField();
        txtCity = new javax.swing.JTextField();
        lblLastUpdated = new javax.swing.JLabel();
        txtMaintenanceCertExpDate = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtManufacturedDate = new javax.swing.JTextField();
        chkboxAvailable = new java.awt.Checkbox();
        txtManufacturer = new javax.swing.JTextField();
        txtUsedBy = new javax.swing.JTextField();
        btnUpdateView = new javax.swing.JButton();

        setBackground(new java.awt.Color(214, 238, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("View Car Details");
        jLabel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tblViewCarDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Model Number", "Serial Number", "Car Model", "Manufactured Date", "Seat Capacity", "Is Available", "City", "Used By App"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblViewCarDetails);

        jLayeredPane3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnViewCarDetails.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnViewCarDetails.setText("View");
        btnViewCarDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewCarDetailsActionPerformed(evt);
            }
        });

        lblLastUpdatedValue.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lblLastUpdatedValue.setText("Last Updated");

        txtLastUpdatedValue.setBackground(new java.awt.Color(204, 204, 204));
        txtLastUpdatedValue.setText("                   ");
        txtLastUpdatedValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLastUpdatedValueActionPerformed(evt);
            }
        });

        btnExpiredMaintCert.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnExpiredMaintCert.setText("List Expired Certificate");
        btnExpiredMaintCert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExpiredMaintCertActionPerformed(evt);
            }
        });

        btnFirstAvailableCar.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnFirstAvailableCar.setText("First Available Car");
        btnFirstAvailableCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstAvailableCarActionPerformed(evt);
            }
        });

        btnDeleteCarDetails.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnDeleteCarDetails.setText("Delete");
        btnDeleteCarDetails.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteCarDetailsActionPerformed(evt);
            }
        });

        btnAllAvailableCars.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnAllAvailableCars.setText("All Available Cars");
        btnAllAvailableCars.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAllAvailableCarsActionPerformed(evt);
            }
        });

        jLayeredPane3.setLayer(btnViewCarDetails, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(lblLastUpdatedValue, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(txtLastUpdatedValue, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(btnExpiredMaintCert, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(btnFirstAvailableCar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(btnDeleteCarDetails, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(btnAllAvailableCars, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane3Layout = new javax.swing.GroupLayout(jLayeredPane3);
        jLayeredPane3.setLayout(jLayeredPane3Layout);
        jLayeredPane3Layout.setHorizontalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(btnViewCarDetails)
                .addGap(28, 28, 28)
                .addComponent(btnDeleteCarDetails)
                .addGap(18, 18, 18)
                .addComponent(btnFirstAvailableCar)
                .addGap(18, 18, 18)
                .addComponent(btnAllAvailableCars)
                .addGap(18, 18, 18)
                .addComponent(lblLastUpdatedValue)
                .addGap(18, 18, 18)
                .addComponent(txtLastUpdatedValue, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(btnExpiredMaintCert)
                .addGap(26, 26, 26))
        );
        jLayeredPane3Layout.setVerticalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnViewCarDetails)
                    .addComponent(btnDeleteCarDetails)
                    .addComponent(btnFirstAvailableCar)
                    .addComponent(btnAllAvailableCars)
                    .addComponent(lblLastUpdatedValue)
                    .addComponent(txtLastUpdatedValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExpiredMaintCert))
                .addContainerGap())
        );

        jLayeredPane4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        appBox.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        appBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Uber", "Lyft", "Ola", "All" }));
        appBox.setSelectedIndex(-1);
        appBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        appBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                appBoxActionPerformed(evt);
            }
        });

        lblManufacturerFilter.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        lblManufacturerFilter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblManufacturerFilter.setText("Car Model");

        lblUsedByApp.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        lblUsedByApp.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUsedByApp.setText("Used By App");

        madeByBox.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        madeByBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Acura", "Audi", "Bentley", "Cadillac", "Dodge" }));
        madeByBox.setSelectedIndex(-1);
        madeByBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        madeByBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                madeByBoxActionPerformed(evt);
            }
        });

        jLayeredPane4.setLayer(appBox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(lblManufacturerFilter, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(lblUsedByApp, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(madeByBox, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane4Layout = new javax.swing.GroupLayout(jLayeredPane4);
        jLayeredPane4.setLayout(jLayeredPane4Layout);
        jLayeredPane4Layout.setHorizontalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane4Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblManufacturerFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jLayeredPane4Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(madeByBox, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane4Layout.createSequentialGroup()
                        .addComponent(appBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(90, 90, 90))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane4Layout.createSequentialGroup()
                        .addComponent(lblUsedByApp, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(73, 73, 73))))
        );
        jLayeredPane4Layout.setVerticalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblManufacturerFilter)
                    .addComponent(lblUsedByApp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(madeByBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(appBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jLayeredPane6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblCountAvlCars.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        lblCountAvlCars.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCountAvlCars.setText("Available");

        lblCountUnAvlCars.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        lblCountUnAvlCars.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCountUnAvlCars.setText("Occupied");

        txtCountAvlCars.setText("0");
        txtCountAvlCars.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtCountUnAvlCars.setText("0");
        txtCountUnAvlCars.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        availStatusButton.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        availStatusButton.setText("Car Availability Status");
        availStatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                availStatusButtonActionPerformed(evt);
            }
        });

        jLayeredPane6.setLayer(lblCountAvlCars, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane6.setLayer(lblCountUnAvlCars, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane6.setLayer(txtCountAvlCars, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane6.setLayer(txtCountUnAvlCars, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane6.setLayer(availStatusButton, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane6Layout = new javax.swing.GroupLayout(jLayeredPane6);
        jLayeredPane6.setLayout(jLayeredPane6Layout);
        jLayeredPane6Layout.setHorizontalGroup(
            jLayeredPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane6Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(availStatusButton)
                .addContainerGap())
            .addGroup(jLayeredPane6Layout.createSequentialGroup()
                .addGroup(jLayeredPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane6Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(txtCountAvlCars, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jLayeredPane6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblCountAvlCars, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jLayeredPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane6Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblCountUnAvlCars, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane6Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCountUnAvlCars, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41))))
        );
        jLayeredPane6Layout.setVerticalGroup(
            jLayeredPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(availStatusButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCountAvlCars)
                    .addComponent(lblCountUnAvlCars))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPane6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCountAvlCars, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCountUnAvlCars, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLayeredPane7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnManufacturedDateFilter.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnManufacturedDateFilter.setText("OK");
        btnManufacturedDateFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManufacturedDateFilterActionPerformed(evt);
            }
        });

        lblManufacturedYearFilter.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        lblManufacturedYearFilter.setText("Filter by Manufactured Year");

        txtManufacturedDateFilter.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLayeredPane7.setLayer(btnManufacturedDateFilter, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane7.setLayer(lblManufacturedYearFilter, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane7.setLayer(txtManufacturedDateFilter, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane7Layout = new javax.swing.GroupLayout(jLayeredPane7);
        jLayeredPane7.setLayout(jLayeredPane7Layout);
        jLayeredPane7Layout.setHorizontalGroup(
            jLayeredPane7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane7Layout.createSequentialGroup()
                .addGroup(jLayeredPane7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblManufacturedYearFilter))
                    .addGroup(jLayeredPane7Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(txtManufacturedDateFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jLayeredPane7Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(btnManufacturedDateFilter)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane7Layout.setVerticalGroup(
            jLayeredPane7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblManufacturedYearFilter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtManufacturedDateFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnManufacturedDateFilter)
                .addContainerGap())
        );

        jLayeredPane8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLayeredPane8.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N

        lblManufacturedYearFilter1.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        lblManufacturedYearFilter1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblManufacturedYearFilter1.setText("Filter by Seats Availability");

        lblMinSeat.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lblMinSeat.setText("Min.");

        comboBoxMaximumCapacity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2", "3", "4", "5", "6", "7", "8", "9", "10", "11" }));
        comboBoxMaximumCapacity.setSelectedIndex(9);
        comboBoxMaximumCapacity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        comboBoxMaximumCapacity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxMaximumCapacityActionPerformed(evt);
            }
        });

        lblMaxSeat.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lblMaxSeat.setText("Max.");

        comboBoxMinCapacity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        comboBoxMinCapacity.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        comboBoxMinCapacity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxMinCapacityActionPerformed(evt);
            }
        });

        jLayeredPane8.setLayer(lblManufacturedYearFilter1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane8.setLayer(lblMinSeat, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane8.setLayer(comboBoxMaximumCapacity, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane8.setLayer(lblMaxSeat, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane8.setLayer(comboBoxMinCapacity, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane8Layout = new javax.swing.GroupLayout(jLayeredPane8);
        jLayeredPane8.setLayout(jLayeredPane8Layout);
        jLayeredPane8Layout.setHorizontalGroup(
            jLayeredPane8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane8Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jLayeredPane8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane8Layout.createSequentialGroup()
                        .addGroup(jLayeredPane8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblManufacturedYearFilter1, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                            .addGroup(jLayeredPane8Layout.createSequentialGroup()
                                .addComponent(lblMinSeat)
                                .addGap(81, 81, 81)
                                .addComponent(lblMaxSeat)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jLayeredPane8Layout.createSequentialGroup()
                        .addComponent(comboBoxMinCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(comboBoxMaximumCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))))
        );
        jLayeredPane8Layout.setVerticalGroup(
            jLayeredPane8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblManufacturedYearFilter1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPane8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMinSeat)
                    .addComponent(lblMaxSeat))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxMinCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxMaximumCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jLayeredPane9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnModelNumberFilter.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnModelNumberFilter.setText("OK");
        btnModelNumberFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModelNumberFilterActionPerformed(evt);
            }
        });

        txtModelNumberFilter.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblModelNumberFilter.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        lblModelNumberFilter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblModelNumberFilter.setText("Filter by Model Number");

        jLayeredPane9.setLayer(btnModelNumberFilter, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane9.setLayer(txtModelNumberFilter, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane9.setLayer(lblModelNumberFilter, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane9Layout = new javax.swing.GroupLayout(jLayeredPane9);
        jLayeredPane9.setLayout(jLayeredPane9Layout);
        jLayeredPane9Layout.setHorizontalGroup(
            jLayeredPane9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtModelNumberFilter, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jLayeredPane9Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(lblModelNumberFilter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jLayeredPane9Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(btnModelNumberFilter)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane9Layout.setVerticalGroup(
            jLayeredPane9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblModelNumberFilter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtModelNumberFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnModelNumberFilter)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jLayeredPane10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnCityFilter.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnCityFilter.setText("OK");
        btnCityFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCityFilterActionPerformed(evt);
            }
        });

        lblCityFilter.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        lblCityFilter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCityFilter.setText("Filter by City");

        txtCityFilter.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLayeredPane10.setLayer(btnCityFilter, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane10.setLayer(lblCityFilter, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane10.setLayer(txtCityFilter, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane10Layout = new javax.swing.GroupLayout(jLayeredPane10);
        jLayeredPane10.setLayout(jLayeredPane10Layout);
        jLayeredPane10Layout.setHorizontalGroup(
            jLayeredPane10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane10Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(txtCityFilter))
                    .addComponent(lblCityFilter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(23, 23, 23))
            .addGroup(jLayeredPane10Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(btnCityFilter)
                .addContainerGap(86, Short.MAX_VALUE))
        );
        jLayeredPane10Layout.setVerticalGroup(
            jLayeredPane10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblCityFilter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtCityFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCityFilter)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLayeredPane11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtSerialNumberFilter.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnSerialNumberFilter.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnSerialNumberFilter.setText("OK");
        btnSerialNumberFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSerialNumberFilterActionPerformed(evt);
            }
        });

        lblSerialNumberFilter.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        lblSerialNumberFilter.setText("Filter by Serial Number");

        jLayeredPane11.setLayer(txtSerialNumberFilter, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane11.setLayer(btnSerialNumberFilter, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane11.setLayer(lblSerialNumberFilter, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane11Layout = new javax.swing.GroupLayout(jLayeredPane11);
        jLayeredPane11.setLayout(jLayeredPane11Layout);
        jLayeredPane11Layout.setHorizontalGroup(
            jLayeredPane11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane11Layout.createSequentialGroup()
                .addGroup(jLayeredPane11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtSerialNumberFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jLayeredPane11Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(lblSerialNumberFilter)))
                .addContainerGap(37, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane11Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnSerialNumberFilter)
                .addGap(67, 67, 67))
        );
        jLayeredPane11Layout.setVerticalGroup(
            jLayeredPane11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSerialNumberFilter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtSerialNumberFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSerialNumberFilter)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jLayeredPane5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblUsedBy.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        lblUsedBy.setForeground(new java.awt.Color(255, 255, 255));
        lblUsedBy.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUsedBy.setText("Used By App");

        lblMaintenanceCertExpDate.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        lblMaintenanceCertExpDate.setForeground(new java.awt.Color(255, 255, 255));
        lblMaintenanceCertExpDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMaintenanceCertExpDate.setText("Certificate Expire Date");

        lblManufacturedDate.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        lblManufacturedDate.setForeground(new java.awt.Color(255, 255, 255));
        lblManufacturedDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblManufacturedDate.setText("Manufactured On");

        lblSeatCapacity.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        lblSeatCapacity.setForeground(new java.awt.Color(255, 255, 255));
        lblSeatCapacity.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSeatCapacity.setText("Number of Seats Available");

        lblCarSerialNum.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        lblCarSerialNum.setForeground(new java.awt.Color(255, 255, 255));
        lblCarSerialNum.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCarSerialNum.setText("Serial Number");

        lblCity.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        lblCity.setForeground(new java.awt.Color(255, 255, 255));
        lblCity.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCity.setText("City");

        lblCarManufacturer.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        lblCarManufacturer.setForeground(new java.awt.Color(255, 255, 255));
        lblCarManufacturer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCarManufacturer.setText("Made By");

        lblCarModelNum.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        lblCarModelNum.setForeground(new java.awt.Color(255, 255, 255));
        lblCarModelNum.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCarModelNum.setText("Model Number");

        txtModelNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtModelNumActionPerformed(evt);
            }
        });

        lblLastUpdated.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        lblLastUpdated.setForeground(new java.awt.Color(255, 255, 255));
        lblLastUpdated.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLastUpdated.setText("Last Updated");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 13)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Availability of Car");

        chkboxAvailable.setLabel("Is Available");

        btnUpdateView.setBackground(new java.awt.Color(51, 51, 51));
        btnUpdateView.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateView.setText("Update Car Details");
        btnUpdateView.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnUpdateView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateViewActionPerformed(evt);
            }
        });

        jLayeredPane5.setLayer(lblUsedBy, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(lblMaintenanceCertExpDate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(lblManufacturedDate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(lblSeatCapacity, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(lblCarSerialNum, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(lblCity, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(lblCarManufacturer, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(txtSeatCapacity, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(lblCarModelNum, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(txtSerialNum, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(txtLastUpdated, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(txtModelNum, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(txtCity, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(lblLastUpdated, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(txtMaintenanceCertExpDate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(txtManufacturedDate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(chkboxAvailable, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(txtManufacturer, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(txtUsedBy, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane5.setLayer(btnUpdateView, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane5Layout = new javax.swing.GroupLayout(jLayeredPane5);
        jLayeredPane5.setLayout(jLayeredPane5Layout);
        jLayeredPane5Layout.setHorizontalGroup(
            jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane5Layout.createSequentialGroup()
                .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lblMaintenanceCertExpDate)
                                .addComponent(lblLastUpdated)
                                .addComponent(jLabel2)
                                .addComponent(lblCarSerialNum)
                                .addComponent(lblCity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblUsedBy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lblSeatCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, 135, Short.MAX_VALUE)
                            .addComponent(lblManufacturedDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblCarModelNum, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCarManufacturer))
                        .addGap(42, 42, 42)
                        .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtModelNum, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(txtSerialNum, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                            .addComponent(txtManufacturedDate, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                            .addComponent(txtSeatCapacity, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                            .addComponent(txtCity, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                            .addComponent(txtMaintenanceCertExpDate, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                            .addComponent(txtLastUpdated, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                            .addComponent(chkboxAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtManufacturer)
                            .addComponent(txtUsedBy)))
                    .addGroup(jLayeredPane5Layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(btnUpdateView, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jLayeredPane5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtCity, txtLastUpdated, txtMaintenanceCertExpDate, txtManufacturedDate, txtModelNum, txtSeatCapacity, txtSerialNum});

        jLayeredPane5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel2, lblCarManufacturer, lblCarModelNum, lblCarSerialNum, lblCity, lblLastUpdated, lblMaintenanceCertExpDate, lblManufacturedDate, lblSeatCapacity, lblUsedBy});

        jLayeredPane5Layout.setVerticalGroup(
            jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCarModelNum)
                    .addComponent(txtModelNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSerialNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCarSerialNum))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCarManufacturer))
                .addGap(12, 12, 12)
                .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtManufacturedDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblManufacturedDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSeatCapacity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSeatCapacity))
                .addGap(12, 12, 12)
                .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsedBy)
                    .addComponent(txtUsedBy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaintenanceCertExpDate)
                    .addComponent(txtMaintenanceCertExpDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLastUpdated)
                    .addComponent(txtLastUpdated, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(chkboxAvailable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnUpdateView, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
        );

        jLayeredPane5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtCity, txtLastUpdated, txtMaintenanceCertExpDate, txtManufacturedDate, txtModelNum, txtSeatCapacity, txtSerialNum});

        jLayeredPane5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel2, lblCarManufacturer, lblCarModelNum, lblCarSerialNum, lblCity, lblLastUpdated, lblMaintenanceCertExpDate, lblManufacturedDate, lblSeatCapacity, lblUsedBy});

        jDesktopPane1.setLayer(jLayeredPane5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLayeredPane7)
                            .addComponent(jLayeredPane9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLayeredPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLayeredPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLayeredPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLayeredPane6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLayeredPane10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLayeredPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 884, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLayeredPane8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLayeredPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(127, 127, 127)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLayeredPane6)
                    .addComponent(jLayeredPane10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLayeredPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLayeredPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLayeredPane11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtModelNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtModelNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtModelNumActionPerformed

    private void btnDeleteCarDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteCarDetailsActionPerformed
        int selectedRowIndex = tblViewCarDetails.getSelectedRow();
        
        if(selectedRowIndex < 0) {  
            JOptionPane.showMessageDialog(this, "Please select a row to delete");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblViewCarDetails.getModel();
        Car selectedCar = (Car) model.getValueAt(selectedRowIndex, 0);
        
        carFleetDetails.removeCar(selectedCar);
        JOptionPane.showMessageDialog(this, "Car deleted");
        
        populateTable();
    }//GEN-LAST:event_btnDeleteCarDetailsActionPerformed

    private void btnViewCarDetailsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewCarDetailsActionPerformed
        int selectedRowIndex = tblViewCarDetails.getSelectedRow();
        
        if(selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view details");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblViewCarDetails.getModel();
        Car selectedCar = (Car) model.getValueAt(selectedRowIndex, 0);
        
        txtModelNum.setText(String.valueOf(selectedCar.getModelNumber()));
        txtSerialNum.setText(String.valueOf(selectedCar.getSerialNumber()));
        txtManufacturer.setText(selectedCar.getManufacturer());
        txtManufacturedDate.setText(String.valueOf(selectedCar.getManufacturedDate()));
        txtSeatCapacity.setText(String.valueOf(selectedCar.getSeatCapacity()));
        txtUsedBy.setText(selectedCar.getUsedByApp());
        txtCity.setText(selectedCar.getCity());
        txtMaintenanceCertExpDate.setText(String.valueOf(selectedCar.getMaintenanceCertExpDate()));
        txtLastUpdated.setText(String.valueOf(selectedCar.getLastUpdated()));
        chkboxAvailable.setState(selectedCar.isIsAvailable());
    }//GEN-LAST:event_btnViewCarDetailsActionPerformed

    private void btnAllAvailableCarsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAllAvailableCarsActionPerformed

        String isAvailable = "true";
        populateTableAvailable(isAvailable);
        
    }//GEN-LAST:event_btnAllAvailableCarsActionPerformed

    private void madeByBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_madeByBoxActionPerformed
        populateTable();
    }//GEN-LAST:event_madeByBoxActionPerformed

    private void btnFirstAvailableCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstAvailableCarActionPerformed
        String isAvailable = "true";
        populateTableFirstAvailable();
    }//GEN-LAST:event_btnFirstAvailableCarActionPerformed

    private void availStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_availStatusButtonActionPerformed
        int totalCarAvl = 0;
        int countCarAvl = 0;
        int countUnAvlCar = 0;
        for(Car c: carFleetDetails.getCarFleetDetails()) {
                totalCarAvl++;    
            if (c.isIsAvailable() == true) {
                countCarAvl++;
            }
        }
        countUnAvlCar = totalCarAvl - countCarAvl;
        txtCountAvlCars.setText(String.valueOf(countCarAvl));
        txtCountUnAvlCars.setText(String.valueOf(countUnAvlCar));
    }//GEN-LAST:event_availStatusButtonActionPerformed

    private void btnManufacturedDateFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManufacturedDateFilterActionPerformed

        populateTableManufacturedYear();
    }//GEN-LAST:event_btnManufacturedDateFilterActionPerformed

    private void comboBoxMinCapacityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxMinCapacityActionPerformed

        Object countMinCapacity = comboBoxMinCapacity.getSelectedItem();
        int countMinCapacityInt = Integer.parseInt(countMinCapacity.toString());
        comboBoxMaximumCapacity.removeAllItems();
        for (int i=countMinCapacityInt; i<=10 ; i++) {
            String newcountMinCapacityInt = String.valueOf(i + 1);
            comboBoxMaximumCapacity.addItem(newcountMinCapacityInt);
        }
        populateSeatCapacityFilterTable();
    }//GEN-LAST:event_comboBoxMinCapacityActionPerformed

    private void comboBoxMaximumCapacityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxMaximumCapacityActionPerformed

        populateSeatCapacityFilterTable();
    }//GEN-LAST:event_comboBoxMaximumCapacityActionPerformed

    private void btnSerialNumberFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSerialNumberFilterActionPerformed
        populateTableSerialNumberFilter();
    }//GEN-LAST:event_btnSerialNumberFilterActionPerformed

    private void btnModelNumberFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModelNumberFilterActionPerformed
        populateTableModelNumberFilter();
    }//GEN-LAST:event_btnModelNumberFilterActionPerformed

    private void appBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_appBoxActionPerformed
        populateTableUsedByApp();
    }//GEN-LAST:event_appBoxActionPerformed

    private void txtLastUpdatedValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLastUpdatedValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLastUpdatedValueActionPerformed

    private void btnCityFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCityFilterActionPerformed
        populateTableCityFilter();
    }//GEN-LAST:event_btnCityFilterActionPerformed

    private void btnExpiredMaintCertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExpiredMaintCertActionPerformed
        populateTableExpiredCertFilter();
    }//GEN-LAST:event_btnExpiredMaintCertActionPerformed

    private void btnUpdateViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateViewActionPerformed
       int SerialNumber = Integer.parseInt(txtSerialNum.getText());
       for(Car c: carFleetDetails.getCarFleetDetails()) {
            if(!txtSerialNum.getText().isEmpty() && c.getSerialNumber() == SerialNumber) {
                LocalDate todaysDate = LocalDate.now();
                boolean available = chkboxAvailable.getState();
                DateTimeFormatter dformatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
                LocalDate localDate = LocalDate.parse(txtManufacturedDate.getText(), dformatter);
                LocalDate manufacturedDate = localDate;
                LocalDate localDateCerExp = LocalDate.parse(txtMaintenanceCertExpDate.getText(), dformatter);
                Object viewUsedByApp = appBox.getSelectedItem();
                String usedBy = viewUsedByApp.toString();
                Object viewManufacturedBy = madeByBox.getSelectedItem();
                String manufacturedBy = viewManufacturedBy.toString();
                c.setModelNumber(Integer.parseInt(txtModelNum.getText()));
                c.setManufacturedDate(manufacturedDate);
                c.setSeatCapacity(Integer.parseInt(txtSeatCapacity.getText()));
                c.setCity(txtCity.getText());
                c.setUsedByApp(usedBy);
                c.setManufacturer(manufacturedBy);
                c.setMaintenanceCertExpDate(localDateCerExp);
                c.setLastUpdated(todaysDate);
                c.setIsAvailable(available);
            }
        }
        populateTable();
    }//GEN-LAST:event_btnUpdateViewActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> appBox;
    private javax.swing.JButton availStatusButton;
    private javax.swing.JButton btnAllAvailableCars;
    private javax.swing.JButton btnCityFilter;
    private javax.swing.JButton btnDeleteCarDetails;
    private javax.swing.JButton btnExpiredMaintCert;
    private javax.swing.JButton btnFirstAvailableCar;
    private javax.swing.JButton btnManufacturedDateFilter;
    private javax.swing.JButton btnModelNumberFilter;
    private javax.swing.JButton btnSerialNumberFilter;
    private javax.swing.JButton btnUpdateView;
    private javax.swing.JButton btnViewCarDetails;
    private java.awt.Checkbox chkboxAvailable;
    private javax.swing.JComboBox<String> comboBoxMaximumCapacity;
    private javax.swing.JComboBox<String> comboBoxMinCapacity;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLayeredPane jLayeredPane10;
    private javax.swing.JLayeredPane jLayeredPane11;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JLayeredPane jLayeredPane5;
    private javax.swing.JLayeredPane jLayeredPane6;
    private javax.swing.JLayeredPane jLayeredPane7;
    private javax.swing.JLayeredPane jLayeredPane8;
    private javax.swing.JLayeredPane jLayeredPane9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCarManufacturer;
    private javax.swing.JLabel lblCarModelNum;
    private javax.swing.JLabel lblCarSerialNum;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCityFilter;
    private javax.swing.JLabel lblCountAvlCars;
    private javax.swing.JLabel lblCountUnAvlCars;
    private javax.swing.JLabel lblLastUpdated;
    private javax.swing.JLabel lblLastUpdatedValue;
    private javax.swing.JLabel lblMaintenanceCertExpDate;
    private javax.swing.JLabel lblManufacturedDate;
    private javax.swing.JLabel lblManufacturedYearFilter;
    private javax.swing.JLabel lblManufacturedYearFilter1;
    private javax.swing.JLabel lblManufacturerFilter;
    private javax.swing.JLabel lblMaxSeat;
    private javax.swing.JLabel lblMinSeat;
    private javax.swing.JLabel lblModelNumberFilter;
    private javax.swing.JLabel lblSeatCapacity;
    private javax.swing.JLabel lblSerialNumberFilter;
    private javax.swing.JLabel lblUsedBy;
    private javax.swing.JLabel lblUsedByApp;
    private javax.swing.JComboBox<String> madeByBox;
    private javax.swing.JTable tblViewCarDetails;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCityFilter;
    private javax.swing.JTextField txtCountAvlCars;
    private javax.swing.JTextField txtCountUnAvlCars;
    private javax.swing.JTextField txtLastUpdated;
    private javax.swing.JTextField txtLastUpdatedValue;
    private javax.swing.JTextField txtMaintenanceCertExpDate;
    private javax.swing.JTextField txtManufacturedDate;
    private javax.swing.JTextField txtManufacturedDateFilter;
    private javax.swing.JTextField txtManufacturer;
    private javax.swing.JTextField txtModelNum;
    private javax.swing.JTextField txtModelNumberFilter;
    private javax.swing.JTextField txtSeatCapacity;
    private javax.swing.JTextField txtSerialNum;
    private javax.swing.JTextField txtSerialNumberFilter;
    private javax.swing.JTextField txtUsedBy;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblViewCarDetails.getModel();
        model.setRowCount(0);
        
        Object selectedManufacturer = madeByBox.getSelectedItem();
        ArrayList<LocalDate> allUpdates = new ArrayList<LocalDate>();
        
        for(Car c: carFleetDetails.getCarFleetDetails()) {
            if (selectedManufacturer != null && selectedManufacturer.equals(c.getManufacturer())) {
            Object [] row = new Object[8];
            row[0] = c;
            row[1] = c.getSerialNumber();
            row[2] = c.getManufacturer();
            row[3] = c.getManufacturedDate();
            row[4] = c.getSeatCapacity();
            row[5] = c.isIsAvailable();
            row[6] = c.getCity();
            row[7] = c.getUsedByApp();
            
            model.addRow(row); 
            } else if(selectedManufacturer == null || selectedManufacturer == "All") {
                Object [] row = new Object[8];
            row[0] = c;
            row[1] = c.getSerialNumber();
            row[2] = c.getManufacturer();
            row[3] = c.getManufacturedDate();
            row[4] = c.getSeatCapacity();
            row[5] = c.isIsAvailable();
            row[6] = c.getCity();
            row[7] = c.getUsedByApp();
            
            model.addRow(row); 
            }
        }
        for(Car c: carFleetDetails.getCarFleetDetails()) {
            allUpdates.add(c.getLastUpdated());
        }
        
        if (!allUpdates.isEmpty()) {
            System.out.println("inside");
                   LocalDate maxDate = allUpdates.get(0); 

        for (int i = 1; i < allUpdates.size()-1; i++) { 
                if (allUpdates.get(i).isAfter(maxDate)) { 
                        maxDate = allUpdates.get(i); 
                } 
        }
        txtLastUpdatedValue.setText(String.valueOf(maxDate)); 
        }
        
    }
    
    private void populateTableUsedByApp() {
        DefaultTableModel model = (DefaultTableModel) tblViewCarDetails.getModel();
        model.setRowCount(0);
        
        Object selectedUsedByApp = appBox.getSelectedItem();
        
        for(Car c: carFleetDetails.getCarFleetDetails()) {
            if (selectedUsedByApp != null && selectedUsedByApp.equals(c.getUsedByApp())) {
            Object [] row = new Object[8];
            row[0] = c;
            row[1] = c.getSerialNumber();
            row[2] = c.getManufacturer();
            row[3] = c.getManufacturedDate();
            row[4] = c.getSeatCapacity();
            row[5] = c.isIsAvailable();
            row[6] = c.getCity();
            row[7] = c.getUsedByApp();
            
            model.addRow(row); 
            } else if(selectedUsedByApp == null || selectedUsedByApp == "All") {
                Object [] row = new Object[8];
            row[0] = c;
            row[1] = c.getSerialNumber();
            row[2] = c.getManufacturer();
            row[3] = c.getManufacturedDate();
            row[4] = c.getSeatCapacity();
            row[5] = c.isIsAvailable();
            row[6] = c.getCity();
            row[7] = c.getUsedByApp();
            
            model.addRow(row); 
            }
        }
        
    }
    
    private void populateTableAvailable(String isAvailable) {
        DefaultTableModel model = (DefaultTableModel) tblViewCarDetails.getModel();
        model.setRowCount(0);
        
        for(Car c: carFleetDetails.getCarFleetDetails()) {
            
            if(c.isIsAvailable() == true) {
                Object [] row = new Object[8];
                row[0] = c;
                row[1] = c.getSerialNumber();
                row[2] = c.getManufacturer();
                row[3] = c.getManufacturedDate();
                row[4] = c.getSeatCapacity();
                row[5] = c.isIsAvailable();
                row[6] = c.getCity();
                row[7] = c.getUsedByApp();

                model.addRow(row);
            }
        }
        
    }
    
    private void populateTableFirstAvailable() {
        DefaultTableModel model = (DefaultTableModel) tblViewCarDetails.getModel();
        model.setRowCount(0);
        
        for(Car c: carFleetDetails.getCarFleetDetails()) {
            
            if(c.isIsAvailable() == true) {
                Object [] row = new Object[8];
                row[0] = c;
                row[1] = c.getSerialNumber();
                row[2] = c.getManufacturer();
                row[3] = c.getManufacturedDate();
                row[4] = c.getSeatCapacity();
                row[5] = c.isIsAvailable();
                row[6] = c.getCity();
                row[7] = c.getUsedByApp();
                
                if (model.getRowCount() == 0) {
                    model.addRow(row);
                }
            }
        }
        
    }

    private void populateTableManufacturedYear() {
        DefaultTableModel model = (DefaultTableModel) tblViewCarDetails.getModel();
        model.setRowCount(0);
        int manufacturedYear = Integer.parseInt(txtManufacturedDateFilter.getText());
        
        for(Car c: carFleetDetails.getCarFleetDetails()) {
            int manuYear = c.getManufacturedDate().getYear();
            
            if(manuYear == manufacturedYear) {
                Object [] row = new Object[8];
                row[0] = c;
                row[1] = c.getSerialNumber();
                row[2] = c.getManufacturer();
                row[3] = c.getManufacturedDate();
                row[4] = c.getSeatCapacity();
                row[5] = c.isIsAvailable();
                row[6] = c.getCity();
                row[7] = c.getUsedByApp();

                model.addRow(row);
            }
        }
    }

    private void populateSeatCapacityFilterTable() {
        DefaultTableModel model = (DefaultTableModel) tblViewCarDetails.getModel();
        model.setRowCount(0);
        
        Object selectedMinCapacity = comboBoxMinCapacity.getSelectedItem();
        Object selectedMaxCapacity = comboBoxMaximumCapacity.getSelectedItem();
        
        for(Car c: carFleetDetails.getCarFleetDetails()) {
            int countMinCapacityInt = Integer.parseInt(selectedMinCapacity.toString());
            int countMaxCapacityInt = 11;
            if(comboBoxMaximumCapacity.getSelectedItem() != null) {
               countMaxCapacityInt = Integer.parseInt(selectedMaxCapacity.toString()); 
            }
            if (c.getSeatCapacity() <= countMaxCapacityInt && c.getSeatCapacity() >= countMinCapacityInt) {
            Object [] row = new Object[8];
            row[0] = c;
            row[1] = c.getSerialNumber();
            row[2] = c.getManufacturer();
            row[3] = c.getManufacturedDate();
            row[4] = c.getSeatCapacity();
            row[5] = c.isIsAvailable();
            row[6] = c.getCity();
            row[7] = c.getUsedByApp();
            
            model.addRow(row); 
            } 
        }
        
    }

    private void populateTableSerialNumberFilter() {
        DefaultTableModel model = (DefaultTableModel) tblViewCarDetails.getModel();
        model.setRowCount(0);
        int serialNumber = Integer.parseInt(txtSerialNumberFilter.getText());
        
        for(Car c: carFleetDetails.getCarFleetDetails()) {
            int seriNum = c.getSerialNumber();
            
            if(seriNum == serialNumber) {
                Object [] row = new Object[8];
                row[0] = c;
                row[1] = c.getSerialNumber();
                row[2] = c.getManufacturer();
                row[3] = c.getManufacturedDate();
                row[4] = c.getSeatCapacity();
                row[5] = c.isIsAvailable();
                row[6] = c.getCity();
                row[7] = c.getUsedByApp();

                model.addRow(row);
            }
        }
    }
    
    private void populateTableModelNumberFilter() {
        DefaultTableModel model = (DefaultTableModel) tblViewCarDetails.getModel();
        model.setRowCount(0);
        int modelNumber = Integer.parseInt(txtModelNumberFilter.getText());
        
        for(Car c: carFleetDetails.getCarFleetDetails()) {
            int modelNum = c.getModelNumber();
            
            if(modelNum == modelNumber) {
                Object [] row = new Object[8];
                row[0] = c;
                row[1] = c.getSerialNumber();
                row[2] = c.getManufacturer();
                row[3] = c.getManufacturedDate();
                row[4] = c.getSeatCapacity();
                row[5] = c.isIsAvailable();
                row[6] = c.getCity();
                row[7] = c.getUsedByApp();

                model.addRow(row);
            }
        }
    }

    private void populateTableCityFilter() {
        DefaultTableModel model = (DefaultTableModel) tblViewCarDetails.getModel();
        model.setRowCount(0);
        String typeCity = txtCityFilter.getText();
        
        for(Car c: carFleetDetails.getCarFleetDetails()) {
            String city = c.getCity();
            
            if(city == typeCity) {
                Object [] row = new Object[8];
                row[0] = c;
                row[1] = c.getSerialNumber();
                row[2] = c.getManufacturer();
                row[3] = c.getManufacturedDate();
                row[4] = c.getSeatCapacity();
                row[5] = c.isIsAvailable();
                row[6] = c.getCity();
                row[7] = c.getUsedByApp();

                model.addRow(row);
            }
        }
    }

    private void populateTableExpiredCertFilter() {
        DefaultTableModel model = (DefaultTableModel) tblViewCarDetails.getModel();
        model.setRowCount(0);
        LocalDate lt = LocalDate.now();
        
        for(Car c: carFleetDetails.getCarFleetDetails()) {
            LocalDate expiry = c.getMaintenanceCertExpDate();
            
            if(expiry.isBefore(lt)) {
                Object [] row = new Object[8];
                row[0] = c;
                row[1] = c.getSerialNumber();
                row[2] = c.getManufacturer();
                row[3] = c.getManufacturedDate();
                row[4] = c.getSeatCapacity();
                row[5] = c.isIsAvailable();
                row[6] = c.getCity();
                row[7] = c.getUsedByApp();

                model.addRow(row);
            }
        }
    }
}
